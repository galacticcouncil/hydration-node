name: GitHub Actions Demo
env:
    SUBWASM_VERSION: 0.20.0
    TOML_CLI_VERSION: 0.2.4
run-name: ${{ github.actor }} is testing Srtool Build 🚀
on: push
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: echo "🍏 This job's status is ${{ job.status }}."
  
  find-runtimes:
      name: Scan repo paritytech/polkadot-sdk
      outputs:
        runtime: ${{ steps.get_runtimes_list.outputs.runtime }}
      runs-on: ubuntu-latest
      steps:
        - name: Install tooling
          run: |
              URL=https://github.com/chevdor/toml-cli/releases/download/v${{ env.TOML_CLI_VERSION }}/toml_linux_amd64_v${{ env.TOML_CLI_VERSION }}.deb
              curl -L $URL --output toml.deb
              sudo dpkg -i toml.deb
              toml --version; jq --version

        - name: Scan and get runtimes list
          id: get_runtimes_list
          env:
            EXCLUDED_RUNTIMES: ${{ inputs.excluded_runtimes }}:"substrate-test"
            
          run: |
            . ./.github/scripts/common/lib.sh
            echo "Github workspace: ${{ github.workspace }}"
            echo "Current folder: $(pwd)"; ls -al
            ls -al

            MATRIX=$(find_runtimes | tee runtimes_list.json)
            echo $MATRIX
            echo "runtime=$MATRIX" >> $GITHUB_OUTPUT

        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0


  srtool:
    runs-on: ubuntu-latest
    needs:
      - find-runtimes
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.find-runtimes.outputs.runtime) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Srtool build
        id: srtool_build
        uses: chevdor/srtool-actions@v0.9.2
        with:
          chain: ${{ matrix.chain }}
          runtime_dir: ${{ matrix.runtime_dir }}

      - name: Summary
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq > ${{ matrix.chain }}-srtool-digest.json
          cat ${{ matrix.chain }}-srtool-digest.json
          echo "Compact Runtime: ${{ steps.srtool_build.outputs.wasm }}"
          echo "Compressed Runtime: ${{ steps.srtool_build.outputs.wasm_compressed }}"
